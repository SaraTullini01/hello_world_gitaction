# name: Notify
# # on:
# #   push:
# #   release:
# #     types: [published]

# # jobs:
# #   notify:
# #     name: Notify via Telegram
# #     runs-on: ubuntu-latest
# #     steps:
# #       - name: Send message to Telegram
# #         uses: Lukasss93/telegram-action@v2
# #         env:
# #           TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
# #           TELEGRAM_CHAT: ${{ secrets.TELEGRAM_CHAT }}
# on:
#   push: 
#     branches: [master]

# jobs:
#   success:
#     runs-on: ubuntu-latest
#     steps:

#       - uses: actions/checkout@v2

#       - name: Run success
#         run: exit 0
      
#       - name: Send message to Telegram
#         uses: ./
#         if: always()
#         env:
#             TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
#             TELEGRAM_CHAT: ${{ secrets.TELEGRAM_CHAT }}
#         with:
#             status: ${{job.status}}

#   fail:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - name: Run fail
#         run: exit 1
#       - name: Send message to Telegram
#         uses: ./
#         if: always()
#         env:
#             TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
#             TELEGRAM_CHAT: ${{ secrets.TELEGRAM_CHAT }}
#         with:
#             status: ${{job.status}}

#   no-status:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - name: Run success
#         run: exit 0
#       - name: Send message to Telegram
#         uses: ./
#         if: always()
#         env:
#             TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
#             TELEGRAM_CHAT: ${{ secrets.TELEGRAM_CHAT }}
  
#   alternative-template:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - name: Run success
#         run: exit 0
#       - name: Send message to Telegram
#         uses: ./
#         if: always()
#         env:
#             TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
#             TELEGRAM_CHAT: ${{ secrets.TELEGRAM_CHAT }}
#         with:
#             commit_template: ./templates/commit-alternative.mustache
#             status: ${{job.status}}

name: Notifier

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

#   messageSlack:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Notification Slack
#       uses: rtCamp/action-slack-notify@v2
#       env:
#         SLACK_CHANNEL: ci
#         SLACK_TITLE: Post Title
#         SLACK_USERNAME: BotCI
#         SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
#         SLACK_MESSAGE: "This is your custom message."

#   notifyWhatsApp:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@master
#       - name: Notification WhatsApp
#         id: whatsapp-notify
#         env:
#           account_sid: ${{ secrets.twilio_account_sid }}
#           auth_token: ${{ secrets.twilio_auth_token }}
#           to_whatsapp_no: ${{ secrets.twilio_to_whatsapp_no }}
#           message: "CI üëâüèª Your message here..."
#         uses: khaled-ibtikar/whatsapp-push-notify-action@master
        
  notifyTelegram:
    runs-on: ubuntu-latest
    steps:
    - name: Get channel members
      id: get-members
      run: |
        curl -X GET "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/getChatMembersCount?chat_id=${{ secrets.TELEGRAM_CHAT }}" -o members.json
        members=$(cat members.json | jq '.result')
        echo "::set-output name=members::$members"
    - name: Send message to channel members
      id: send-message
      run: |
        members=$(echo ${{ steps.get-members.outputs.members }})
        for member in $(seq 0 $(($members-1))); do
            curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" -d "chat_id=${{ secrets.TELEGRAM_CHAT }}" -d "text=Hello member $member!"
        done
